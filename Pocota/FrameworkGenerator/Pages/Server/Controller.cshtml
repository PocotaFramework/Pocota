@page
@using Net.Leksi.Pocota.FrameworkGenerator
@using Net.Leksi.Pocota.FrameworkGenerator.Pages.Server
@model ControllerModel
@Html.Partial("Header", Model)

public class @Model.ClassName@if(Model.BaseClasses.Any()){<text>: @Html.Raw(string.Join(", ", Model.BaseClasses))</text>}

{
@foreach(MethodModel mm in Model.Methods)
{
    if (mm.PropertyUse is { })
    {
        ViewDataDictionary vdd = new(ViewData);
        vdd["indentation"] = 4;
        <text>#region @mm.Name PropertyUse
    private static readonly PropertyUse s_@mm.Name@{}PropertyUse = @Html.Partial("PropertyUse", mm.PropertyUse, vdd);
#endregion @mm.Name PropertyUse    
</text>
    }
    <text>    [HttpGet]
    [Route("@mm.Route")]
    @if(!string.IsNullOrEmpty(mm.Authorize))
    {
        <text>    [Authorize(@Html.Raw(mm.Authorize))]
</text>
    }
    public void @mm.Name@{}(@string.Join(", ", mm.Parameters.Select(p => $"string {p.Name}")))
    {
        IPocoContext @mm.PocoContextVariable = Request.HttpContext.RequestServices.GetRequiredService<IPocoContext>();
        JsonSerializerOptions @mm.JsonSerializerOptionsVariable = @mm.PocoContextVariable.@{}GetJsonSerializerOptions(null);

    @foreach(ParameterModel pm in mm.Parameters)
    {
        <text>        @Html.Raw(pm.TypeName)@if(pm.IsNullable){
            <text>?</text>
        } @pm.Variable = JsonSerializer.Deserialize@{}@Html.Raw($"<{pm.TypeName}>")@{
        }(@pm.Name, @mm.JsonSerializerOptionsVariable)@if(!pm.IsNullable && pm.Type.IsClass){<text>!</text>};
</text>
    }
        @mm.JsonSerializerOptionsVariable = @mm.PocoContextVariable.@{}GetJsonSerializerOptions(s_@mm.Name@{}PropertyUse);
        @Model.BuilderClassName @Model.BuilderVariable = Request.HttpContext.RequestServices.GetRequiredService<@Model.BuilderClassName>();
        Request.HttpContext.Response.ContentType = "application/json";
        JsonSerializer.Serialize(Request.HttpContext.Response.Body, @Model.BuilderVariable.@mm.Name@{}(@string.Join(", ", mm.Parameters.Select(p => p.Variable))), jsopVar);
    }
</text>
}
    [HttpPost]
    @if(!string.IsNullOrEmpty(Model.UpdateAuthorize))
    {
        <text>    [Authorize(@Html.Raw(Model.UpdateAuthorize))]
</text>
    }
    public void Update()
    {

    }
}