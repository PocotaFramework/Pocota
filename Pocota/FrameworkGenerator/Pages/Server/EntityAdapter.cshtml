@page
@using Net.Leksi.Pocota
@using Net.Leksi.Pocota.FrameworkGenerator
@using Net.Leksi.Pocota.FrameworkGenerator.Pages.Server
@model EntityAdapterModel
@Html.Partial("Header", Model)

public class @Model.ClassName@{}(IPocoContext pocoContext)@if(Model.BaseClasses.Any()){<text>: @string.Join(", ", Model.BaseClasses)</text>}

{
    private const string s_primaryKeyNotSet = "Primary key is not set!";
    private const string s_primaryKeySet = "Primary key is set!";
    private readonly IPocoContext _pocoContext = pocoContext;
    private readonly @Model.EntityClassName? _source = null;
@foreach (PropertyModel pm in Model.Properties.Where(v => v.IsPrimaryKey).OrderBy(v => v.Name))
{
    <text>    private @Html.Raw(pm.TypeName) _@pm.Name = default!;
</text>
}
#region Properties
    object[] IEntity.PrimaryKey => throw new NotImplementedException();

@foreach(PropertyModel pm in Model.Properties)
{
    <text>    public override @Html.Raw(pm.TypeName)@(pm.IsNullable ? "?" : string.Empty) @pm.Name 
    { 
        get
        {
    @if(pm.IsPrimaryKey)
    {
        <text>            if(_source is {})
            {
                return _source.@pm.Name;
            }
            return _@pm.Name;
</text>
    }
    else
    {
        <text>            if(_source is {})
            {
                return _source.@pm.Name;
            }
            throw new InvalidOperationException(s_primaryKeyNotSet);
</text>
    }
        }
        set
        {
    @if(pm.IsPrimaryKey)
    {
        <text>
</text>
    }
    else
    {
        <text>            if(_source is {})
            {
                _source.@pm.Name = value;
            }
            else{
                throw new InvalidOperationException(s_primaryKeyNotSet);
            }
</text>
    }
        }
    }
</text>
}
#endregion Properties
}