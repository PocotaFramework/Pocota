@page
@using Net.Leksi.Pocota
@using Net.Leksi.Pocota.FrameworkGenerator
@using Net.Leksi.Pocota.FrameworkGenerator.Pages.Server
@model PrimaryKeyModel
@Html.Partial("Header", Model)

public class @Model.ClassName@{}(IServiceProvider services)@if(Model.BaseClasses.Any()){<text>: @Html.Raw(string.Join(", ", Model.BaseClasses))</text>}

{
#region Properties
@foreach (PropertyModel pm in Model.Properties)
{
    <text>    public @Html.Raw(pm.TypeName) @pm.Name { get; set; } = default!;
</text>
}
#endregion Properties
    public IEnumerable<object> GetPrimaryKey()
    {
@foreach (PropertyModel pm in Model.Properties.Where(v => v.IsPrimaryKey).OrderBy(v => v.Name))
{
    if(pm.PocoKind is PocoKind.Entity)
    {
        <text>        foreach (object pk in ((@nameof(IPrimaryKey))@pm.Name).GetPrimaryKey())
        {
            yield return pk;
        }
</text>
    }
    else
    {
        <text>        yield return @pm.Name;
</text>
    }
}
    }
    public bool TryFindEntity(out @Model.ArgumentClass obj)
    {
        bool result = services.GetRequiredService<@nameof(IPocoContext)>().TryFindEntity<@Model.ArgumentClass>(GetPrimaryKey(), out obj);
        if (!result)
        {
@foreach (PropertyModel pm in Model.Properties.Where(v => v.IsPrimaryKey))
{
    <text>            ((@Model.ArgumentClass@{}Dto)obj).Set@{}@pm.Name@{}(@pm.Name);
</text>
}
        }
        return result;
    }
}
