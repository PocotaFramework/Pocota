@using Net.Leksi.Pocota
@using Net.Leksi.Pocota.FrameworkGenerator
@model PropertyUseModel
@{
    string indention = string.Format($"{{0,{(Model.Level <= 1 ? (Model.Level + 1) : (Model.Level + 1) * 2)}}}", "").Replace(" ", "    ");
    bool showFlags = (bool?)@ViewData["ShowFlags"] ?? true;
}
new() 
@indention@{}{
@indention@{}    Property = @Model.PropertyName!,
@if (Model.Flags != PropertyUseFlags.None && showFlags)
{
    <text>@indention@{}    Flags = @string.Join(" | ", Enum.GetValues<PropertyUseFlags>().Where(v => v != PropertyUseFlags.None && Model.Flags.HasFlag(v)).Select(v => $"{nameof(PropertyUseFlags)}.{v}")),
</text>
}
@if((Model.Children?.Count ?? 0) > 0)
{
    <text>@indention@{}    Children = new([
    @foreach(PropertyUseModel pum in Model.Children!)
    {
        <text>@indention@{}        @Html.Partial("PropertyUse", pum),
</text>
    }
@indention@{}    ]),
</text>
}
@indention@{}}