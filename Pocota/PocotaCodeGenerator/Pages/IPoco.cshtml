@using Net.Leksi.Pocota.Common;
@model ClassModel

@Html.Raw("#region IPoco")

    void IPoco.Clear()
    {
        @foreach(PropertyModel pm in Model.Properties.Where(p => !p.IsList))
        {
            string fieldName = $"_{pm.Name.Substring(0, 1).ToLower()}{pm.Name.Substring(1)}";
            <text>        @Html.Raw($"_is_set{fieldName}") = false;
</text>
        }
    }

    bool IPoco.IsLoaded(Type @@interface)
    {
        @foreach(ClassModel @class in Model.Classes){
            <text>        if(@@interface == typeof(@Html.Raw(@class.Interface)))
        {
            return @Html.Raw($"{string.Join("\r\n                && ", new string[]{"true"}.Concat(@class.Properties.Where(p => !p.IsList).Select(pm => $"_is_set_{pm.Name.Substring(0, 1).ToLower()}{pm.Name.Substring(1)}")))}")
            ;
        }
</text>
        }
        return false;
    }

    bool @Html.Raw("IPoco.IsLoaded<T>()")
    {
        return ((IPoco)this).IsLoaded(typeof(T));
    }

    bool IPoco.IsPropertySet(string property)
    {
        switch(property)
        {
        @foreach(PropertyModel pm in Model.Properties.Where(p => !p.IsList))
        {
            string fieldName = $"_is_set_{pm.Name.Substring(0, 1).ToLower()}{pm.Name.Substring(1)}";
            <text>            case @Html.Raw($"\"{pm.Name}\""):
                return @fieldName;
</text>
        }
            default:
                return false;
        }
    }

    void IPoco.TouchProperty(string property)
    {
        switch(property)
        {
        @foreach(PropertyModel pm in Model.Properties.Where(p => !p.IsList))
        {
            string fieldName = $"_is_set_{pm.Name.Substring(0, 1).ToLower()}{pm.Name.Substring(1)}";
            <text>            case @Html.Raw($"\"{pm.Name}\""):
                @fieldName = true;
                break;
</text>
        }
        }
    }

@Html.Raw("#endregion IPoco");
