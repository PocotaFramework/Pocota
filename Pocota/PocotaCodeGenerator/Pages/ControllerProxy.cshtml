@page
@using Net.Leksi.Pocota.Common
@model ClassModel
@Html.Partial("HeaderComment", Model)

@foreach(string usng in Model.Usings.OrderBy(v => v))
{
    <text>using @usng;
</text>
}

namespace @Model.NamespaceValue;

public class @Model.ClassName : @typeof(Controller).Name
{

    @foreach (MethodModel mm in Model.Methods)
    {
        foreach(AttributeModel am in mm.Attributes){
            <text>    [@Html.Raw(am.ToString())]
</text>
    }
    <text>    public @mm.ReturnType @mm.Name@Html.Raw($"(")@if (!mm.HasBody) {<text>@Html.Raw(string.Join(", ", mm.Parameters.Select(v => $"{v.Type} {v.Name}")))</text>}) 
    {
        @if(mm.Filters.Count > 0){
                foreach(FilterModel fm in mm.Filters)
                {
                    <text>        @fm.Type @fm.Variable = default!;
</text>
                }
            <text>        IPocoContext @mm.PocoContextVariable = HttpContext.RequestServices.GetRequiredService<IPocoContext>();
        JsonSerializerOptions @mm.JsonSerializerOptionsVariable = @mm.PocoContextVariable@Html.Raw(".")BindJsonSerializerOptions();
</text>
            if(!mm.HasBody){
                foreach(FilterModel fm in mm.Filters.Where(v => !v.IsConvertible))
                {
                    <text>        if (@fm.Name is { })
        {
            @mm.PocoContextVariable@Html.Raw(".")AddJsonConverters<@fm.Type>(@mm.JsonSerializerOptionsVariable);
            @fm.Variable = JsonSerializer.Deserialize<@fm.Type>(HttpUtility.UrlDecode(@fm.Name), @mm.JsonSerializerOptionsVariable)@if (!fm.IsNullable) {<text>!</text>};
        }
</text>
                }
                foreach(FilterModel fm in mm.Filters.Where(v => v.IsConvertible))
                {
                    <text>        @fm.Variable = @if (fm.IsNullable) {<text> @fm.Name is null
                    ? null
                    : </text>}(@fm.Type)Convert.ChangeType(@fm.Name,typeof(@fm.Type));
</text>
                }
            }
            else {
                <text>        if(HttpContext.Request.ContentLength > 0)
        {
            @mm.PocoContextVariable@Html.Raw(".")AddJsonConverters<@mm.Filters.First().Type>(@mm.JsonSerializerOptionsVariable);
            @mm.Filters.First().Variable = @if (mm.Filters.First().IsNullable) {<text> @mm.Filters.First().Name is null
                    ? null
                    : </text>}JsonSerializer.Deserialize<@mm.Filters.First().Type>(HttpContext.Request.Body, @mm.JsonSerializerOptionsVariable)@if (!mm.Filters.First().IsNullable) {<text>!</text>};
        }
</text>
            }
        }
        @Model.ControllerInterface @mm.ControllerVariable = HttpContext.RequestServices.GetRequiredService<@Model.ControllerInterface>();
        ((Controller)@mm.ControllerVariable).ControllerContext = ControllerContext;
        @mm.ControllerVariable@Html.Raw(".")@mm.Name@Html.Raw($"(")@string.Join(", ", mm.CallParameters));
    }

</text>
    }
}