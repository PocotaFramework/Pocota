@using Net.Leksi.Pocota.Common;
@model ClassModel

@Html.Raw("#region Poco Changed");

@foreach (PropertyModel pm in Model.Properties.Where(p => p.IsProjector))
{
    string fieldName = $"_{pm.Name.Substring(0, 1).ToLower()}{pm.Name.Substring(1)}";
    <text>    protected virtual void @Html.Raw(pm.Name)PocoChanged(object? sender, NotifyPocoChangedEventArgs e) => PropagateChangeEvent(e, nameof(@Html.Raw(pm.Name)));

</text>
}

@foreach (PropertyModel pm in Model.Properties.Where(p => p.IsList))
{
    string fieldName = $"_{pm.Name.Substring(0, 1).ToLower()}{pm.Name.Substring(1)}";
    <text>    protected virtual void @Html.Raw(pm.Name)CollectionChanged(object? sender, NotifyCollectionChangedEventArgs e)
    {
        @if (pm.IsProjection)
        {
            <text>        if (e.OldItems is { })
        {
            foreach (INotifyPocoChanged item in e.OldItems)
            {
                item.PocoChanged -= @Html.Raw($"{pm.Name}PocoChanged");
            }
        }
        if (e.NewItems is { })
        {
            foreach (INotifyPocoChanged item in e.NewItems)
            {
                item.PocoChanged += @Html.Raw($"{pm.Name}PocoChanged");
            }
        }
</text>
        }

        @Html.Raw($"OnPocoChanged(_initial{fieldName}, {fieldName}, nameof({pm.Name}))");
        OnPropertyChanged(nameof(@pm.Name));
    }

    </text>
}

@Html.Raw("#endregion Poco Changed");
