@using Net.Leksi.Pocota.Common;
@model ClassModel

@foreach(PropertyModel pm in Model.Properties)
{
    string fieldName = "_" + pm.Name.Substring(0, 1).ToLower() + pm.Name.Substring(1);
    <text>    public virtual @Html.Raw(pm.Type)@if (pm.IsNullable) {<text>?</text> } @pm.Name
    {
        get => @fieldName;
    @if(!pm.IsReadOnly)
    {
        if(pm.IsList)
        {
            <text>        set => throw new NotImplementedException();
</text>
        }
        else
        {
            <text>        set
        {
            if(@fieldName != value)
            {
                @Html.Raw("object")@if (pm.IsNullable) {<text>?</text> } oldValue = @fieldName;
                @if(pm.IsProjector)
                {
                    <text>                if(@fieldName is {})
                {
                    @Html.Raw($"{fieldName}.PocoChanged -= {pm.Name}PocoChanged;")
                }
</text>   
                }
                @fieldName = value;
                @if(pm.IsProjector)
                {
                    <text>                if(@fieldName is {})
                {
                    @Html.Raw($"{fieldName}.PocoChanged += {pm.Name}PocoChanged;")
                }
</text>   
                }
                OnPocoChanged(oldValue, value);
                OnPropertyChanged();
            }
        }
</text>
            }
        }
    }

</text>
}
