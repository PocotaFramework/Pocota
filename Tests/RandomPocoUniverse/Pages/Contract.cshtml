@page
@using Net.Leksi.Pocota.Test.RandomPocoUniverse;
@model ContractModel
@foreach (string usng in Model.Usings.OrderBy(v => v))
{
    <text>using @usng;
</text>
}
using  Net.Leksi.Pocota.Common;


namespace @UniverseOptions.Namespace;

[PocoContract("Random", Version = "v1.0", RoutePrefix = "/api")]
public class @UniverseOptions.ContractName: Contract
{
    public override void DefinePocos()
    {
@foreach(EntityNode entity in Model.Universe.Nodes.Where(n => n is EntityNode))
{
    <text>        Entity<@entity.Name>()
            .PrimaryKey(p => new object[]{@Html.Raw(string.Join(",", @entity.PrimaryKey.Select(pd => $"p.{pd.Name}")))});
</text>
}
@foreach (Node envelope in Model.Universe.Nodes.Where(n => n is not EntityNode))
{
    <text>        Envelope<@envelope.Name>();
</text>
}
    }
@foreach(MethodModel mm in Model.Methods)
{
    <text>    public @Html.Raw(mm.ReturnType) @mm.Name@{}(@string.Join(", ", mm.Parameters.Select(p => $"{p.Type} {p.Name}")))
    {
        throw new NotImplementedException();
    }
</text>
}
}
